#!/usr/bin/env ruby
# encoding: utf-8
# tested with ruby 1.9.3

module X module Prod module Utils
  require_relative '../lib/0x1/0x1_lib.helper.rb'

  class PrintTermBase256

    def initialize
      x__load_modules([:standard])
      print_term()
    end

    def x_print16(i_start, l_base)
      (0..15).each do |n|
        current = ((i_start + n) - 1)
        raw_number = x__integer_2_string(current, l_base)
        if l_base == :bin
          raw_number = x__format_pad(raw_number, :right, 8, '0')
        elsif l_base == :hex
          raw_number = raw_number.insert(0, '0x')
        end
        print x__format_pad(raw_number, :right, 9, ' ')
        print "\n" if (current+1)%16 == 0
      end
    end

    def print_term
      m = 1
      while m < 256
        [:dec, :hex, :bin].each do |base|
          x_print16(m, base)
        end
        puts
        m += 16
      end
    end

  end

  PrintTermBase256.new

end end end


# ____________________________________________________________________
# >>>>>  projet epiculture/ec1   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#{{{
# Sources, Infos & Contact : http://www.epiculture.org
# Author: Pierre-Maël Crétinon
# License: GNU GPLv3 ( www.epiculture.org/ec1/LICENSE )
# Copyright: 2010-2012 Pierre-Maël Crétinon
# Sponsor: studio Helianova - http://studio.helianova.com
# ――――――――――――――――――――――――――――――――――――――#}}}
# vim: ft=ruby
